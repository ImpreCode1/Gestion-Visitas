generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique
  name          String
  email         String         @unique
  phone         String?
  position      String?
  department    String?
  role          String
  tipoaprobador TipoAprobador? @default(null)

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relaciones
  visitasRegistradas Visita[]     @relation("VisitasGerente")
}

model Visita {
  id          Int   @id @default(autoincrement())
  gerenteId   Int
  gerente     User  @relation("VisitasGerente", fields: [gerenteId], references: [id])

  // Datos del cliente (se ingresan manualmente)
  clienteCodigo String
  cliente       String

  direccion     String
  ciudad        String?
  pais          String?
  contacto      String?
  telefono      String?
  personaVisita String?
  motivo        String

  fecha_ida     DateTime
  fecha_regreso DateTime
  lugar         String?
  requiereAvion Boolean @default(false) // ðŸ‘ˆ Nuevo campo para ramificar el flujo
  estado        EstadoVisita @default(pendiente)

  // Relaciones
  documentos   Documento[]
  aprobaciones Aprobacion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Documento {
  id           Int           @id @default(autoincrement())
  visitaId     Int
  visita       Visita        @relation(fields: [visitaId], references: [id])
  tipo         TipoDocumento
  url          String
  descripcion  String?
  monto        Float?
  fechaEmision DateTime?
  createdAt    DateTime      @default(now())
}

model Aprobacion {
  id          Int              @id @default(autoincrement())
  visitaId    Int
  visita      Visita           @relation(fields: [visitaId], references: [id])

  rol         RolAprobacion
  estado      EstadoAprobacion @default(pendiente)
  comentario  String?
  fecha       DateTime         @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum EstadoVisita {
  pendiente
  aprobada
  rechazada
  completada
}

enum EstadoAprobacion {
  pendiente
  aprobado
  rechazado
}

enum TipoDocumento {
  factura
  comprobante
  foto
  otro
}

enum TipoAprobador {
  null
  local
  nacional
  internacional
}

enum RolAprobacion {
  vicepresidencia
  tiquetes
  transporte
}
